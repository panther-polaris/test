{\rtf1\ansi\ansicpg936\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;\red29\green133\blue25;\red180\green0\blue98;\red77\green0\blue158;
\red92\green38\blue153;\red0\green11\blue255;\red32\green60\blue63;\red46\green13\blue110;\red68\green137\blue147;
\red186\green0\blue17;\red48\green111\blue121;\red38\green71\blue75;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural

\f0\fs36 \cf2 \CocoaLigature0 //\
//  Safety.swift\
//  CampusCircle_ios_client\
//\
//  Created by bp on 15/7/5.\
//  Copyright (c) 2015
\f1 \'c4\'ea
\f0  panther-polaris. All rights reserved.\
//\
\cf0 \
\cf3 import\cf0  UIKit\
\
    \cf3 class\cf0  Safety: \cf4 NSObject\cf0  \{\
    \
    \cf3 func\cf0  TimeStamp() ->\cf5 NSTimeInterval\cf0 \{\
        \cf3 var\cf0  timeInterval:\cf5 NSTimeInterval\cf0  = \cf6 0\cf0 \
        timeInterval = \cf4 NSDate\cf0 ().\cf5 timeIntervalSince1970\cf0 \
        \
        \cf3 return\cf0  timeInterval\
    \}\
    \cf2 //\
\cf0     \cf2 /*\
    
\f1 \'b8\'c3\'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6\'bd\'ab\'c3\'dc\'c2\'eb\'bd\'f8\'d0\'d0
\f0 MD5
\f1 \'bc\'d3\'c3\'dc
\f0 \
    
\f1 \'ca\'b9\'d3\'c3\'b7\'bd\'b7\'a8\'ca\'c2\'c0\'fd\'a3\'ba
\f0 \
    var returnPassword = Data_transmission()\
    returnPassword.checkPassWord(PassWord.text)\
    */\cf0 \
    \cf2 //func PassWord_md5(PassWord: String)->Bool\{\
\cf0     \cf2 //    var result:Bool\
\cf0     \cf2 //    result = true\
\cf0     \cf2 //    var password_md5:String = PassWord.md5()\
\cf0     \cf2 //    return result\
\cf0     \cf2 //\}\
\cf0     \
    \cf2 /*\
    
\f1 \'b8\'c3\'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6\'bd\'ab\'c3\'dc\'c2\'eb\'bd\'f8\'d0\'d0
\f0 MD5
\f1 \'bc\'d3\'c3\'dc
\f0 \
    
\f1 \'ca\'b9\'d3\'c3\'b7\'bd\'b7\'a8\'ca\'c2\'c0\'fd\'a3\'ba
\f0 \
    var returnPassword = Data_transmission()\
    returnPassword.checkPassWord(PassWord.text)\
    */\cf0 \
    \cf3 func\cf0  LoginEncryption(PassWord: \cf5 String\cf0 )-> \cf5 String\cf0 \{\
        \cf3 var\cf0  timestamp: \cf5 Int\cf0 ,timestamps: \cf5 Int\cf0 \
        timestamp =  \cf5 Int\cf0 (\cf7 TimeStamp\cf0 ())\
        timestamps = timestamp / \cf6 120\cf0 \
        \cf3 var\cf0  userlogin: \cf5 String\cf0  = PassWord.\cf7 md5\cf0 () + \cf5 String\cf0 (timestamps)\
        \cf3 var\cf0  userlogin_md5: \cf5 String\cf0  = userlogin.\cf7 md5\cf0 ()\
        userlogin_md5 = userlogin.\cf7 md5\cf0 ()\
        \cf3 return\cf0  userlogin_md5\
    \}\
\}\
\cf2 /*\

\f1 \'b8\'c3\'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6\'bd\'ab\'c3\'dc\'c2\'eb\'d3\'eb\'ca\'b1\'bc\'e4\'b4\'c1\'c6\'b4\'bd\'d3\'b2\'a2\'bd\'f8\'d0\'d0
\f0 MD5
\f1 \'bc\'d3\'c3\'dc
\f0 \
*/\cf0 \
\cf3 extension\cf0  \cf5 String\cf0 \{\
    \cf3 func\cf0  md5() ->\cf5 String\cf0 !\{\
        \cf3 let\cf0  str = \cf3 self\cf0 .\cf8 cStringUsingEncoding\cf0 (\cf5 NSUTF8StringEncoding\cf0 )\
        \cf3 let\cf0  strLen = \cf5 CUnsignedInt\cf0 (\cf3 self\cf0 .\cf8 lengthOfBytesUsingEncoding\cf0 (\cf5 NSUTF8StringEncoding\cf0 ))\
        \cf3 let\cf0  digestLen = \cf5 Int\cf0 (\cf9 CC_MD5_DIGEST_LENGTH\cf0 )\
        \cf3 let\cf0  result = \cf5 UnsafeMutablePointer\cf0 <\cf5 CUnsignedChar\cf0 >.\cf8 alloc\cf0 (digestLen)\
        \cf7 CC_MD5\cf0 (str!, strLen, result)\
        \cf3 var\cf0  hash = \cf4 NSMutableString\cf0 ()\
        \cf3 for\cf0  i \cf3 in\cf0  \cf6 0\cf0  ..< digestLen \{\
            hash.\cf8 appendFormat\cf0 (\cf10 "%02x"\cf0 , result[i])\
        \}\
        result.\cf8 destroy\cf0 ()\
        \cf3 return\cf0  \cf5 String\cf0 (format: hash \cf3 as\cf0  \cf5 String\cf0 )\
    \}\
\}\
\
\
\
\
\
\
\
\
\cf2 //\
//  ViewController.swift\
//  CampusCircle_ios_client\
//\
//  Created by jwq on 15/6/29.\
//  Copyright (c) 2015
\f1 \'c4\'ea
\f0  panther-polaris. All rights reserved.\
//\
\cf0 \
\cf3 import\cf0  UIKit\
\cf3 import\cf0  Alamofire\
\cf3 import\cf0  SwiftyJSON\
\cf3 var\cf0  data_transmission = \cf11 Data_transmission\cf0 ()\
\cf3 var\cf0  data_prcessing = \cf11 Data_processing\cf0 ()\
\cf3 var\cf0  safety = \cf11 Safety\cf0 ()\
\cf3 let\cf0  url = \cf10 "http://192.168.1.12"\cf0    \cf2 //
\f1 \'d4\'da\'b4\'cb\'c9\'e8\'d6\'c3\'b7\'fe\'ce\'f1\'c6\'f7\'b5\'c4\'b5\'d8\'d6\'b7
\f0 \
\cf3 class\cf0  ViewController: \cf4 UIViewController\cf0 \{\
\
    \cf3 @IBOutlet\cf0  \cf3 weak\cf0  \cf3 var\cf0  UserName: \cf4 UITextField\cf0 !\
    \cf3 @IBOutlet\cf0  \cf3 weak\cf0  \cf3 var\cf0  PassWord: \cf4 UITextField\cf0 !\
    \cf2 //@IBAction func submit(sender: UIButton) \{\
\cf0     \cf2 //    println("a")\
\cf0     \cf2 //           \}\
\cf0     \cf3 @IBAction\cf0  \cf3 func\cf0  loginbtn(sender: \cf4 AnyObject\cf0 ) \{\
        \cf7 checkLogin\cf0 ()\
        \cf2 /*\
        self.performSegueWithIdentifier("login", sender: self)\
        \
        var ReturnFrist: Bool = checkUserName()\
        if (ReturnFrist)\{\
            if checkLogin()\{\
        \
            \}else\{\
                println("
\f1 \'c3\'dc\'c2\'eb\'b4\'ed\'ce\'f3
\f0 ")\
            \}\
        \}else\{\
            println("
\f1 \'d3\'c3\'bb\'a7\'c3\'fb\'b2\'bb\'b4\'e6\'d4\'da
\f0 ")\
        \}\
        */\cf0 \
    \}\
    \
    \
    \cf3 override\cf0  \cf3 func\cf0  viewDidLoad() \{\
        \cf3 super\cf0 .\cf8 viewDidLoad\cf0 ()\
        \cf2 // Do any additional setup after loading the view, typically from a nib.\
\cf0     \}\
    \cf3 override\cf0  \cf3 func\cf0  didReceiveMemoryWarning() \{\
        \cf3 super\cf0 .\cf8 didReceiveMemoryWarning\cf0 ()\
        \cf2 // Dispose of any resources that can be recreated.\
\cf0     \}\
\
    \cf3 func\cf0  checkLogin()->\cf5 Bool\cf0 \{\
        \cf3 var\cf0  state:\cf5 Bool\cf0  = \cf3 false\cf0 \
        \cf3 var\cf0  username:\cf5 String\cf0  = \cf9 UserName\cf0 .\cf5 text\cf0 \
        \cf3 var\cf0  Password_Time_md5: \cf5 String\cf0  = \cf9 safety\cf0 .\cf7 LoginEncryption\cf0 (\cf9 PassWord\cf0 .\cf5 text\cf0 )\
        \cf3 var\cf0  UserMessage:\cf5 String\cf0  = username + \cf10 "&"\cf0  + Password_Time_md5\
        \cf8 println\cf0 ()\
        Alamofire.\cf7 request\cf0 (.\cf12 GET\cf0 , \cf9 url\cf0 +\cf10 "/test.php"\cf0 , parameters: [\cf10 "usermessage"\cf0 :UserMessage]).\cf7 responseJSON\cf0 () \{\
            (\cf3 _\cf0 , \cf3 _\cf0 , dataFromNetwork, \cf3 _\cf0 ) \cf3 in\cf0 \
            \cf8 println\cf0 (dataFromNetwork)\
            \cf3 if\cf0  (dataFromNetwork != \cf3 nil\cf0 )\{\
                \cf3 let\cf0  json = \cf9 JSON\cf0 (dataFromNetwork!)\
                \cf3 let\cf0  state = json[\cf10 "state"\cf0 ]\
            \}\cf3 else\cf0 \{\
                \cf8 println\cf0 (\cf10 "
\f1 \cf10 \'cd\'a8\'d1\'b6\'b9\'ca\'d5\'cf
\f0 \cf10 "\cf0 )\
            \}\
        \}\
        \cf3 return\cf0  state\
    \}\
\}\
\
}